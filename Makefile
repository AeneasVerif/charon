ifeq (3.81,$(MAKE_VERSION))
  $(error You seem to be using the OSX antiquated Make version. Hint: brew \
    install make, then invoke gmake instead of make)
endif

.PHONY: all
all: build tests

# We use Rust nightly in order to:
# - be able to write a Rustc plugin
# - use Polonius in some tests
# We keep the nightly version in sync in all the crates by copy-pasting
# a template file for the toolchain.
#
# We used to rely on symbolic links (to a file at the root) but it proved
# problematic with Nix (e.g., if you build the Charon crate, you don't have
# access to files in the parent directory).
#
# Rem.: this is not really necessary for the `tests` crate.
.PHONY: generate-rust-toolchain
generate-rust-toolchain: \
	generate-rust-toolchain-charon \
	generate-rust-toolchain-tests \
	generate-rust-toolchain-tests-polonius

.PHONY: generate-rust-toolchain-%
generate-rust-toolchain-%:
	rm -f $*/rust-toolchain
	echo "# This file was automatically generated: if you need to perform modifications," >> $*/rust-toolchain
	echo "# update rust-toolchain.template in the top directory." >> $*/rust-toolchain
	cat rust-toolchain.template >> $*/rust-toolchain

.PHONY: build
build: build-charon-rust build-charon-ml

.PHONY: build-charon-rust
build-charon-rust: generate-rust-toolchain
	cd charon && $(MAKE)

.PHONY: build-charon-ml
build-charon-ml:
	cd charon-ml && $(MAKE)

# Build the tests crate, and run the cargo tests
.PHONY: build-tests
build-tests:
	cd tests && $(MAKE) build && $(MAKE) cargo-tests

# Build the tests-polonius crate, and run the cargo tests
.PHONY: build-tests-polonius
build-tests-polonius:
	cd tests-polonius && $(MAKE) build && $(MAKE) cargo-tests

# Build and run the tests
.PHONY: tests
tests: build-tests build-tests-polonius charon-tests charon-ml-tests

# Run Charon on various test files
.PHONY: charon-tests
charon-tests: charon-tests-regular charon-tests-polonius

# Run the Charon ML tests on the .ullbc and .llbc files generated by Charon
.PHONY: charon-ml-tests
charon-ml-tests: build-charon-ml charon-tests
	cd charon-ml && make tests

# Run Charon on the files in the tests crate
.PHONY: charon-tests-regular
charon-tests-regular: build-tests
	echo "# Starting the regular tests"
	cd tests && make charon-tests
	echo "# Finished the regular tests"

# Run Charon on the files in the tests-polonius crate
.PHONY: charon-tests-polonius
charon-tests-polonius: build-tests-polonius
	echo "# Starting the Polonius tests"
	cd tests-polonius && make charon-tests
	echo "# Finished the Polonius tests"

.PHONY: clean
clean:
	cd attributes && cargo clean
	cd charon && cargo clean
	cd charon/macros && cargo clean
	cd tests && cargo clean
	cd tests-polonius && cargo clean
	rm -rf tests/llbc
	rm -rf tests-polonius/llbc

# Build the Nix packages
.PHONY: nix
nix: nix-tests nix-tests-polonius

.PHONY: nix-tests
nix-tests:
	nix build .#checks.x86_64-linux.tests --show-trace -L

.PHONY: nix-tests-polonius
nix-tests-polonius:
	nix build .#checks.x86_64-linux.tests-polonius --show-trace -L
