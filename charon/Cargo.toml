[package]
name = "charon"
version = "0.1.31"
authors = ["Son Ho <hosonmarc@gmail.com>"]
edition = "2021"
license = "Apache-2.0"

[lib]
name = "charon_lib"
path = "src/lib.rs"

[[bin]]
# The main entrypoint. This is a wrapper that handles toolchain and cargo
# management and calls `charon-driver` for the real work.
name = "charon"
path = "src/bin/charon/main.rs"

[[bin]]
# The rustc driver. The resulting binary dynamically links to rust dylibs
# including `librustc_driver.so`. Do not call directly, call charon instead to
# let it set up the right paths.
name = "charon-driver"
path = "src/bin/charon-driver/main.rs"

[[bin]]
# The rustc driver. The resulting binary dynamically links to rust dylibs
# including `librustc_driver.so`. Do not call directly, call charon instead to
# let it set up the right paths.
name = "generate-ml"
path = "src/bin/generate-ml/main.rs"

[[test]]
name = "ui"
path = "tests/ui.rs"
harness = false

[[test]]
name = "cargo"
path = "tests/cargo.rs"
harness = false

[dependencies]
anyhow = "1.0.81"
assert_cmd = "2.0"
clap = { version = "4.0", features = ["derive", "env"] }
colored = "2.0.4"
convert_case = "0.6.0"
derivative = "2.2.0"
derive-visitor = { version = "0.4.0", features = ["std-types-drive"] }
env_logger = { version = "0.11", features = ["color"] }
hashlink = { version = "0.9", features = ["serde_impl"] }
im = "15.1.0"
index_vec = { version = "0.1.3", features = ["serde"] }
indoc = "2"
itertools = "0.13"
lazy_static = "1.4.0"
log = "0.4.17"
nom = "7.1.3"
nom-supreme = "0.8.0"
petgraph = "0.6.2"
pretty = "0.12"
regex = "1.7.1"
rustc_version = "0.4"
serde_json = { version = "1.0.91", features = ["unbounded_depth"] }
serde-map-to-array = { version = "1.1.1", features = ["std"] }
serde_stacker = "0.1.11"
serde = { version = "1.0.152", features = ["derive"] }
stacker = "0.1"
take_mut = "0.2.2"
toml = { version = "0.8", features = ["parse"] }
tracing-subscriber = { version = "0.3", features = [ "env-filter", "std", "fmt" ] }
tracing-tree = "0.3"
tracing = { version = "0.1", features = [ "max_level_trace", "release_max_level_warn" ] }
which = "6.0.1"

hax-frontend-exporter = { git = "https://github.com/hacspec/hax", branch = "main", optional = true }
# hax-frontend-exporter = { git = "https://github.com/Nadrieril/hax", branch = "update-rustc", optional = true }
# hax-frontend-exporter = { path = "../../hax/frontend/exporter", optional = true }
macros = { path = "./macros" }

[features]
default = ["rustc"]
# This feature enables the translation of rust code into charon's format. When
# disabled, the binaries won't build but the main crate (with the ast
# definitions) still does. It is enabled by default.
rustc = ["dep:hax-frontend-exporter"]

[dev-dependencies]
ignore = "0.4"
indoc = "2"
libtest-mimic = "0.7"
snapbox = "0.6"
tempfile = "3"
walkdir = "2.3.2"

[package.metadata.rust-analyzer]
rustc_private = true
