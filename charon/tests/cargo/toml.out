# Final LLBC before serialization:

enum core::option::Option<T> =
|  None()
|  Some(T)


fn core::option::{core::option::Option<T>}::is_some<'_0, T, const host : bool>(@1: &'_0 (core::option::Option<T>)) -> bool
{
    let @0: bool; // return
    let self@1: &'_ (core::option::Option<T>); // arg #1
    let @2: isize; // anonymous local

    match *(self@1) {
        0 => {
            @2 := const (0 : isize)
        },
        1 => {
            @2 := const (1 : isize)
        }
    }
    @0 := copy (@2) == const (1 : isize)
    return
}

fn test_cargo_toml::main()
{
    let @0: (); // return
    let @1: bool; // anonymous local
    let @2: &'_ (core::option::Option<bool>); // anonymous local
    let @3: core::option::Option<bool>; // anonymous local
    let @4: (); // anonymous local

    @3 := core::option::Option::Some { 0: const (false) }
    @2 := &@3
    @1 := core::option::{core::option::Option<T>}::is_some<bool, true>(move (@2))
    drop @2
    @fake_read(@1)
    drop @3
    drop @1
    @4 := ()
    @0 := move (@4)
    @0 := ()
    return
}



