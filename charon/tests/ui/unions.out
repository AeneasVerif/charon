# Final LLBC before serialization:

union test_crate::Foo =
{
  one: u64,
  two: Array<u32, 2 : usize>,
}

fn test_crate::use_union()
{
    let @0: (); // return
    let one@1: test_crate::Foo; // local
    let @2: (); // anonymous local
    let _two@3: Array<u32, 2 : usize>; // local

    storage_live(one@1)
    one@1 := test_crate::Foo { one: const (42 : u64) }
    @fake_read(one@1)
    storage_live(@2)
    (one@1).one := const (43 : u64)
    storage_dead(@2)
    storage_live(_two@3)
    _two@3 := copy ((one@1).two)
    @fake_read(_two@3)
    @0 := ()
    storage_dead(_two@3)
    storage_dead(one@1)
    @0 := ()
    return
}



