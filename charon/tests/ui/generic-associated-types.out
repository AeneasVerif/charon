error: Could not find region: Region { kind: ReEarlyParam(EarlyParamRegion { index: 2, name: "'b" }) }
       
       Region vars map:
       {Region { kind: ReEarlyParam(EarlyParamRegion { index: 0, name: "'a" }) }: 0}
       
       Bound region vars:
       []
  --> tests/ui/generic-associated-types.rs:11:5
   |
11 |     type Item<'b> = &'b T;
   |     ^^^^^^^^^^^^^

error: Ignoring the following item due to an error: test_crate::{impl#0}
  --> tests/ui/generic-associated-types.rs:10:1
   |
10 | impl<'a, T> LendingIterator for Option<&'a T> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

thread 'rustc' panicked at /rustc/6b0f4b5ec3aa707ecaa78230722117324a4ce23c/compiler/rustc_type_ir/src/binder.rs:785:9:
const parameter `'a/#1` ('a/#1/1) out of range when instantiating args=[Self/#0]
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
error: Thread panicked when extracting item {rust_id}.
 --> tests/ui/generic-associated-types.rs:7:5
  |
7 |     fn next<'a>(&'a mut self) -> Option<Self::Item<'a>>;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Ignoring the following item due to an error: test_crate::LendingIterator::next
 --> tests/ui/generic-associated-types.rs:7:5
  |
7 |     fn next<'a>(&'a mut self) -> Option<Self::Item<'a>>;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Predicates with bound regions (i.e., `for<'a> ...`) are not supported yet
  --> tests/ui/generic-associated-types.rs:24:54
   |
24 | fn for_each<I: LendingIterator>(mut iter: I, f: impl for<'a> FnMut(I::Item<'a>)) {
   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Ignoring the following item due to an error: test_crate::for_each
  --> tests/ui/generic-associated-types.rs:24:1
   |
24 | fn for_each<I: LendingIterator>(mut iter: I, f: impl for<'a> FnMut(I::Item<'a>)) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `x`
  --> tests/ui/generic-associated-types.rs:31:9
   |
31 |     let x = 42;
   |         ^ help: if this is intentional, prefix it with an underscore: `_x`
   |
   = note: `#[warn(unused_variables)]` on by default

error: aborting due to 6 previous errors; 1 warning emitted

[ERROR charon_driver:249] Compilation encountered 6 errors
Error: Charon driver exited with code 1
