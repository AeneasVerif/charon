# Final LLBC before serialization:

opaque type core::fmt::Arguments<'a>
  where
      'a : 'a,

fn core::fmt::{core::fmt::Arguments<'a>}#2::new_const<'a, const N : usize>(@1: &'a (Array<&'static (Str), const N : usize>)) -> core::fmt::Arguments<'a>

fn test_crate::main()
{
    let @0: (); // return
    let @1: core::fmt::Arguments<'_>; // anonymous local
    let @2: &'_ (Array<&'_ (Str), 1 : usize>); // anonymous local
    let @3: &'_ (Array<&'_ (Str), 1 : usize>); // anonymous local
    let @4: Array<&'_ (Str), 1 : usize>; // anonymous local

    @4 := [const ("O no"); 1 : usize]
    @3 := &@4
    @2 := &*(@3)
    @1 := core::fmt::{core::fmt::Arguments<'a>}#2::new_const<'_, 1 : usize>(move (@2))
    drop @2
    panic(core::panicking::panic_fmt)
}



