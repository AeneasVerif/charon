# Final LLBC before serialization:

opaque type core::fmt::Arguments<'a>
  where
      'a : 'a,

fn core::fmt::{core::fmt::Arguments<'a>#2}::new_const<'a, const host : bool>(@1: &'a (Slice<&'static (Str)>)) -> core::fmt::Arguments<'a>

fn test_crate::main()
{
    let @0: (); // return
    let @1: core::fmt::Arguments<'_>; // anonymous local
    let @2: &'_ (Slice<&'_ (Str)>); // anonymous local
    let @3: &'_ (Array<&'_ (Str), 1 : usize>); // anonymous local
    let @4: &'_ (Array<&'_ (Str), 1 : usize>); // anonymous local
    let @5: Array<&'_ (Str), 1 : usize>; // anonymous local

    @5 := [const ("O no"); 1 : usize]
    @4 := &@5
    @3 := &*(@4)
    @2 := @ArrayToSliceShared<'_, &'_ (Str), 1 : usize>(move (@3))
    drop @3
    @1 := core::fmt::{core::fmt::Arguments<'a>#2}::new_const<'_, true>(move (@2))
    drop @2
    panic(core::panicking::panic_fmt)
}



