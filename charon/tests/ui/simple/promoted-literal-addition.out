# Final LLBC before serialization:

fn test_crate::two::{promoted_const}() -> &'_ (u32)
{
    let @0: &'_ (u32); // return
    let @1: u32; // anonymous local
    let @2: (u32, bool); // anonymous local

    storage_live(@1)
    storage_live(@2)
    @2 := const (1 : u32) checked.+ const (1 : u32)
    @1 := move ((@2).0)
    @0 := &@1
    return
}

const test_crate::two::{promoted_const}: &'_ (u32) = test_crate::two::{promoted_const}()

fn test_crate::two() -> &'static (u32)
{
    let @0: &'_ (u32); // return
    let @1: &'_ (u32); // anonymous local
    let @2: &'_ (u32); // anonymous local
    let @3: &'_ (u32); // anonymous local

    storage_live(@2)
    storage_live(@3)
    storage_live(@1)
    @3 := test_crate::two::{promoted_const}
    @2 := move (@3)
    @1 := &*(@2)
    @0 := &*(@1)
    storage_dead(@1)
    return
}



