# Final LLBC before serialization:

pub fn test_crate::foo() -> &'static (Slice<u32>)
{
    let @0: &'_ (Slice<u32>); // return
    let @1: &'_ (Array<u32, 4 : usize>); // anonymous local
    let @2: &'_ (Array<u32, 4 : usize>); // anonymous local
    let @3: &'_ (Array<u32, 4 : usize>); // anonymous local
    let @4: Array<u32, 4 : usize>; // anonymous local
    let @5: &'_ (Array<u32, 4 : usize>); // anonymous local

    @4 := [const (0 : u32), const (1 : u32), const (2 : u32), const (3 : u32)]
    @5 := &@4
    @3 := move (@5)
    @2 := &*(@3)
    @1 := &*(@2)
    @0 := @ArrayToSliceShared<'_, u32, 4 : usize>(move (@1))
    drop @1
    drop @2
    return
}



