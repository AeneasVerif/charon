# Final LLBC before serialization:

#[lang_item("sized")]
pub trait core::marker::Sized<Self>

pub struct test_crate::Foo<F>
  where
      [@TraitClause0]: core::marker::Sized<F>,
 =
{
  F,
}

pub fn test_crate::{test_crate::Foo<F>[@TraitClause0]}::method<F, T>()
where
    [@TraitClause0]: core::marker::Sized<F>,
    [@TraitClause1]: core::marker::Sized<T>,
{
    let @0: (); // return
    let _promoted@1: &'_ (i32); // local
    let @2: &'_ (i32); // anonymous local
    let @3: &'_ (i32); // anonymous local
    let @4: i32; // anonymous local

    storage_live(@2)
    storage_live(@3)
    storage_live(@4)
    @4 := const (0 : i32)
    @3 := &@4
    storage_live(_promoted@1)
    @2 := move (@3)
    _promoted@1 := &*(@2)
    @0 := ()
    storage_dead(_promoted@1)
    @0 := ()
    return
}



