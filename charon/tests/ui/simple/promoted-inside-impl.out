# Final LLBC before serialization:

// Full name: core::marker::MetaSized
#[lang_item("meta_sized")]
pub trait MetaSized<Self>

// Full name: core::marker::Sized
#[lang_item("sized")]
pub trait Sized<Self>
{
    parent_clause0 : [@TraitClause0]: MetaSized<Self>
    non-dyn-compatible
}

// Full name: test_crate::Foo
pub struct Foo<F>
where
    [@TraitClause0]: Sized<F>,
{
  F,
}

// Full name: test_crate::{Foo<F>[@TraitClause0]}::method
pub fn method<F, T>()
where
    [@TraitClause0]: Sized<F>,
    [@TraitClause1]: Sized<T>,
{
    let @0: (); // return
    let _promoted@1: &'_ (i32); // local
    let @2: &'_ (i32); // anonymous local
    let @3: &'_ (i32); // anonymous local
    let @4: i32; // anonymous local

    storage_live(@2)
    storage_live(@3)
    storage_live(@4)
    @4 := const (0 : i32)
    @3 := &@4
    storage_live(_promoted@1)
    @2 := move (@3)
    _promoted@1 := &*(@2)
    @0 := ()
    storage_dead(_promoted@1)
    @0 := ()
    return
}



