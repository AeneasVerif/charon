# Final LLBC before serialization:

trait test_crate::Trait<Self>
{
    fn method<'_0> = test_crate::Trait::method<'_0_0, Self>
}

trait core::marker::Sized<Self>

fn test_crate::{impl test_crate::Trait for T}::method<'_0, T>(@1: &'_0 (T))
where
    [@TraitClause0]: core::marker::Sized<T>,
{
    let @0: (); // return
    let self@1: &'_ (T); // arg #1
    let @2: (); // anonymous local

    @2 := ()
    @0 := move (@2)
    @0 := ()
    return
}

impl<T> test_crate::{impl test_crate::Trait for T}<T> : test_crate::Trait<T>
where
    [@TraitClause0]: core::marker::Sized<T>,
{
    fn method<'_0> = test_crate::{impl test_crate::Trait for T}::method<'_0_0, T>[@TraitClause0]
}

fn test_crate::Trait::method<'_0, Self>(@1: &'_0 (Self))



