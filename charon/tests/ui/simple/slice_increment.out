# Final LLBC before serialization:

fn UNIT_METADATA()
{
    let @0: (); // return

    @0 := ()
    return
}

const UNIT_METADATA: () = @Fun0()

// Full name: test_crate::incr
pub fn incr<'_0>(@1: &'_0 mut (Slice<u32>))
{
    let @0: (); // return
    let s@1: &'_ mut (Slice<u32>); // arg #1
    let @2: usize; // anonymous local
    let @3: u32; // anonymous local
    let @4: usize; // anonymous local
    let @5: usize; // anonymous local
    let @6: &'_ mut (Slice<u32>); // anonymous local
    let @7: &'_ mut (u32); // anonymous local
    let @8: usize; // anonymous local
    let @9: &'_ (Slice<u32>); // anonymous local
    let @10: &'_ (u32); // anonymous local

    storage_live(@3)
    storage_live(@2)
    @2 := const (0 : usize)
    storage_live(@4)
    @4 := ptr_metadata(copy (s@1))
    storage_live(@8)
    @8 := ptr_metadata(copy (s@1))
    storage_live(@9)
    @9 := &(*(s@1), move (@8))
    storage_live(@10)
    @10 := @SliceIndexShared<'_, u32>(move (@9), copy (@2))
    @3 := copy (*(@10)) panic.+ const (1 : u32)
    storage_live(@5)
    @5 := ptr_metadata(copy (s@1))
    storage_live(@6)
    @6 := &mut (*(s@1), move (@5))
    storage_live(@7)
    @7 := @SliceIndexMut<'_, u32>(move (@6), copy (@2))
    *(@7) := move (@3)
    storage_dead(@2)
    @0 := ()
    @0 := ()
    return
}



