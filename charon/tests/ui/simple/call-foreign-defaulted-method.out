# Final LLBC before serialization:

pub fn test_crate::foo::{impl Trait for ()}::defaulted<'_0>(@1: &'_0 (()))
{
    let @0: (); // return
    let self@1: &'_ (()); // arg #1

    @0 := ()
    @0 := ()
    return
}

// Full name: test_crate::main
fn main()
{
    let @0: (); // return
    let @1: (); // anonymous local
    let @2: &'_ (()); // anonymous local
    let @3: (); // anonymous local

    storage_live(@1)
    storage_live(@2)
    storage_live(@3)
    @3 := ()
    @2 := &@3
    @1 := test_crate::foo::{impl Trait for ()}::defaulted<'_>(move (@2))
    storage_dead(@2)
    storage_dead(@3)
    storage_dead(@1)
    @0 := ()
    @0 := ()
    return
}

// Full name: test_crate::foo::Trait
pub trait Trait<Self>
{
    fn defaulted<'_0> = defaulted<'_0_0, Self>[Self]
}

// Full name: test_crate::foo::Trait::defaulted
pub fn defaulted<'_0, Self>(@1: &'_0 (Self))
where
    [@TraitClause0]: Trait<Self>,
{
    let @0: (); // return
    let self@1: &'_ (Self); // arg #1

    @0 := ()
    @0 := ()
    return
}

// Full name: test_crate::foo::{impl Trait for ()}
impl Trait for () {
    fn defaulted<'_0> = test_crate::foo::{impl Trait for ()}::defaulted<'_0_0>
}



