# Final LLBC before serialization:

struct test_crate::foo::closure = {}

pub fn test_crate::foo() -> &'static (test_crate::foo::closure)
{
    let @0: &'_ (test_crate::foo::closure); // return
    let @1: &'_ (test_crate::foo::closure); // anonymous local
    let @2: &'_ (test_crate::foo::closure); // anonymous local
    let @3: &'_ (test_crate::foo::closure); // anonymous local
    let @4: &'_ (test_crate::foo::closure); // anonymous local
    let @5: test_crate::foo::closure; // anonymous local

    storage_live(@3)
    storage_live(@4)
    storage_live(@5)
    @5 := test_crate::foo::closure {  }
    @4 := &@5
    storage_live(@1)
    storage_live(@2)
    @3 := move (@4)
    @2 := &*(@3)
    @1 := &*(@2)
    @0 := &*(@1)
    storage_dead(@2)
    storage_dead(@1)
    return
}



