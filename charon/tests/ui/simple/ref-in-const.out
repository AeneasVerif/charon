# Final LLBC before serialization:

// Full name: test_crate::SOME_INT
fn SOME_INT() -> &'static (&'static (i32))
{
    let @0: &'_ (&'_ (i32)); // return
    let @1: &'_ (&'_ (i32)); // anonymous local
    let @2: &'_ (&'_ (i32)); // anonymous local
    let @3: (); // anonymous local
    let @4: (); // anonymous local
    let @5: &'_ (&'_ (i32)); // anonymous local
    let @6: &'_ (i32); // anonymous local
    let @7: i32; // anonymous local
    let @8: (); // anonymous local
    let @9: (); // anonymous local

    storage_live(@2)
    storage_live(@5)
    storage_live(@6)
    storage_live(@7)
    @7 := const (0 : i32)
    storage_live(@9)
    @9 := ()
    @6 := &(@7, move (@9))
    storage_live(@8)
    @8 := ()
    @5 := &(@6, move (@8))
    storage_live(@1)
    @2 := move (@5)
    storage_live(@4)
    @4 := ()
    @1 := &(*(@2), move (@4))
    storage_live(@3)
    @3 := ()
    @0 := &(*(@1), move (@3))
    storage_dead(@1)
    return
}

// Full name: test_crate::SOME_INT
const SOME_INT: &'static (&'static (i32)) = SOME_INT()



