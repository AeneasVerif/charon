# Final LLBC before serialization:

// Full name: core::marker::Sized
#[lang_item("sized")]
pub trait Sized<Self>

// Full name: test_crate::Trait
trait Trait<Self, Self_Assoc>
{
    parent_clause0 : [@TraitClause0]: Sized<Self_Assoc>
}

// Full name: test_crate::IntoIterator
trait IntoIterator<Self, Self_IntoIter>
{
    parent_clause0 : [@TraitClause0]: Sized<Self_IntoIter>
    parent_clause1 : [@TraitClause1]: Trait<Self_IntoIter, ()>
}

// Full name: test_crate::foo
fn foo<I, Clause1_IntoIter, Clause2_Assoc>()
where
    [@TraitClause0]: Sized<I>,
    [@TraitClause1]: IntoIterator<I, Clause1_IntoIter>,
    [@TraitClause2]: Trait<Clause1_IntoIter, Clause2_Assoc>,
{
    let @0: (); // return

    @0 := ()
    @0 := ()
    return
}



