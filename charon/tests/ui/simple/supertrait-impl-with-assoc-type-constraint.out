# Final LLBC before serialization:

// Full name: core::marker::Sized
#[lang_item("sized")]
pub trait Sized<Self>

// Full name: test_crate::HasAssoc
trait HasAssoc<Self>
{
    parent_clause0 : [@TraitClause0]: Sized<Self::Assoc>
    type Assoc
}

// Full name: test_crate::SuperTrait
trait SuperTrait<Self>

// Full name: test_crate::Trait
trait Trait<Self>
{
    parent_clause0 : [@TraitClause0]: SuperTrait<Self>
}

// Full name: test_crate::{impl SuperTrait for T}
impl<T> SuperTrait for T
where
    [@TraitClause0]: HasAssoc<T>,
    [@TraitClause1]: Sized<T>,
    @TraitClause0::Assoc = (),
{}

// Full name: test_crate::{impl Trait for T}
impl<T> Trait for T
where
    [@TraitClause0]: HasAssoc<T>,
    [@TraitClause1]: Sized<T>,
    @TraitClause0::Assoc = (),
{
    parent_clause0 = {impl SuperTrait for T}<T>[@TraitClause0, @TraitClause1]
}

// Full name: test_crate::main
fn main()
{
    let @0: (); // return

    @0 := ()
    @0 := ()
    return
}



