error: Cannot translate unevaluated constant: PromotedConstant { def_id: test_crate::f, promoted_id: PromotedId { id: 0 }, args: [Type(Ty { kind: Node { id: Id { id: 8 }, value: Param(ParamTy { index: 0, name: "T" }) } })], mir: MirBody { span: Span { lo: Loc { line: 5, col: 12 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:13: 5:28 (#0)) }, local_decls: IndexVec { raw: [LocalDecl { mutability: true, ty: Ty { kind: Node { id: Id { id: 11 }, value: Ref(Region { kind: ReErased }, Ty { kind: Node { id: Id { id: 10 }, value: Uint(Usize) } }, false) } }, source_info: SourceInfo { span: Span { lo: Loc { line: 5, col: 12 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:13: 5:28 (#0)) }, scope: SourceScope(0) }, name: None }, LocalDecl { mutability: true, ty: Ty { kind: Node { id: Id { id: 10 }, value: Uint(Usize) } }, source_info: SourceInfo { span: Span { lo: Loc { line: 5, col: 13 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:14: 5:28 (#0)) }, scope: SourceScope(0) }, name: None }], _marker: PhantomData<fn(&hax_frontend_exporter::types::mir::Local)> }, arg_count: 0, basic_blocks: IndexVec { raw: [BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: Span { lo: Loc { line: 5, col: 13 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:14: 5:28 (#0)) }, scope: SourceScope(0) }, kind: Call { fun: Static { def_id: core::mem::size_of, trait_info: None, generics: [Type(Ty { kind: Node { id: Id { id: 8 }, value: Param(ParamTy { index: 0, name: "T" }) } })], trait_refs: [ImplExpr { trait: Binder { value: TraitRef { def_id: core::marker::Sized, generic_args: [Type(Ty { kind: Node { id: Id { id: 8 }, value: Param(ParamTy { index: 0, name: "T" }) } })] }, bound_vars: [] }, impl: LocalBound { predicate_id: PredicateId(14649509712428509623), index: 0, trait: Binder { value: TraitRef { def_id: core::marker::Sized, generic_args: [Type(Ty { kind: Node { id: Id { id: 8 }, value: Param(ParamTy { index: 0, name: "T" }) } })] }, bound_vars: [] }, path: [] } }] }, late_bound_generics: [], args: [], destination: Place { ty: Ty { kind: Node { id: Id { id: 10 }, value: Uint(Usize) } }, kind: Local(Local(1)) }, target: Some(BasicBlock(1)), unwind: UnwindAction { todo: "Continue" }, fn_span: Span { lo: Loc { line: 5, col: 13 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:14: 5:28 (#0)) } } }), is_cleanup: false }, BasicBlockData { statements: [Statement { source_info: SourceInfo { span: Span { lo: Loc { line: 5, col: 12 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:13: 5:28 (#0)) }, scope: SourceScope(0) }, kind: Assign((Place { ty: Ty { kind: Node { id: Id { id: 11 }, value: Ref(Region { kind: ReErased }, Ty { kind: Node { id: Id { id: 10 }, value: Uint(Usize) } }, false) } }, kind: Local(Local(0)) }, Ref(Region { kind: ReErased }, Shared, Place { ty: Ty { kind: Node { id: Id { id: 10 }, value: Uint(Usize) } }, kind: Local(Local(1)) }))) }], terminator: Some(Terminator { source_info: SourceInfo { span: Span { lo: Loc { line: 5, col: 12 }, hi: Loc { line: 5, col: 27 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:5:13: 5:28 (#0)) }, scope: SourceScope(0) }, kind: Return }), is_cleanup: false }], _marker: PhantomData<fn(&hax_frontend_exporter::types::mir::BasicBlock)> }, source_scopes: IndexVec { raw: [SourceScopeData { span: Span { lo: Loc { line: 3, col: 0 }, hi: Loc { line: 6, col: 1 }, filename: Real(LocalPath("tests/ui/simple/promoted-in-generic-fn.rs")), rust_span_data: Some(tests/ui/simple/promoted-in-generic-fn.rs:3:1: 6:2 (#0)) }, parent_scope: None, inlined_parent_scope: None }], _marker: PhantomData<fn(&hax_frontend_exporter::types::mir::SourceScope)> }, tainted_by_errors: None, _kind: PhantomData<()> } }
 --> tests/ui/simple/promoted-in-generic-fn.rs:5:13
  |
5 |     let _ = &size_of::<T>();
  |             ^^^^^^^^^^^^^^^

ERROR Charon failed to translate this code (1 errors)
