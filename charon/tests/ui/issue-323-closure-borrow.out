# Final LLBC before serialization:

// Full name: test_crate::Rng
struct Rng {}

// Full name: test_crate::{Rng}::next_u64
fn next_u64<'_0>(@1: &'_0 mut (Rng))
{
    let @0: (); // return
    let self@1: &'_ mut (Rng); // arg #1

    @0 := ()
    @0 := ()
    return
}

// Full name: test_crate::new::closure
struct closure<'_0> {
  &'_0 mut (Rng),
}

// Full name: test_crate::new
fn new<'_0>(@1: &'_0 mut (Rng))
{
    let @0: (); // return
    let rng@1: &'_ mut (Rng); // arg #1
    let @2: closure<'_>; // anonymous local
    let @3: &'_ mut (Rng); // anonymous local

    storage_live(@2)
    storage_live(@3)
    @3 := &uniq *(rng@1)
    @2 := closure { 0: move (@3) }
    storage_dead(@3)
    storage_dead(@2)
    @0 := ()
    @0 := ()
    return
}



