# Final LLBC before serialization:

// Full name: core::marker::Sized
#[lang_item("sized")]
pub trait Sized<Self>

// Full name: core::marker::Send
#[lang_item("Send")]
pub trait Send<Self>

// Full name: test_crate::foo
fn foo<M>(@1: M)
where
    [@TraitClause0]: Sized<M>,
    [@TraitClause1]: Send<M>,
{
    let @0: (); // return
    let _msg@1: M; // arg #1

    @0 := ()
    drop _msg@1
    @0 := ()
    return
}

// Full name: test_crate::main
fn main()
{
    let @0: (); // return
    let @1: (); // anonymous local
    let @2: (); // anonymous local

    storage_live(@1)
    storage_live(@2)
    @2 := ()
    @1 := foo<()>[Sized<()>, Send<()>](move (@2))
    storage_dead(@2)
    storage_dead(@1)
    @0 := ()
    @0 := ()
    return
}



