# Final LLBC before serialization:

#[lang_item("sized")]
pub trait core::marker::Sized<Self>

#[lang_item("Send")]
pub trait core::marker::Send<Self>

fn test_crate::foo<M>(@1: M)
where
    [@TraitClause0]: core::marker::Sized<M>,
    [@TraitClause1]: core::marker::Send<M>,
{
    let @0: (); // return
    let _msg@1: M; // arg #1

    @0 := ()
    drop _msg@1
    @0 := ()
    return
}

fn test_crate::main()
{
    let @0: (); // return
    let @1: (); // anonymous local
    let @2: (); // anonymous local

    storage_live(@1)
    storage_live(@2)
    @2 := ()
    @1 := test_crate::foo<()>[core::marker::Sized<()>, core::marker::Send<()>](move (@2))
    storage_dead(@2)
    storage_dead(@1)
    @0 := ()
    @0 := ()
    return
}



