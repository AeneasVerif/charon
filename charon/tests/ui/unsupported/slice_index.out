
thread 'rustc' panicked at /home/nadrieril/.cargo/git/checkouts/hax-580ebeee043cdea1/89a84ec/frontend/exporter/src/types/mir.rs:230:78:
called `Option::unwrap()` on a `None` value
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
error: Hax panicked when translating `Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [StorageLive(_2), StorageLive(_3), StorageLive(_4), StorageLive(_5), _7 = const core::slice::index::slice_end_index_overflow_fail::promoted[0], _5 = &(*_7), _4 = &(*_5), ConstEvalCounter], terminator: Some(Terminator { source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/panic.rs:107:38: 107:72 (#290), scope: scope[0] }, kind: _3 = std::fmt::Arguments::<'_>::new_const::<1>(move _4) -> [return: bb1, unwind continue] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_4), ConstEvalCounter], terminator: Some(Terminator { source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/panic.rs:107:9: 107:73 (#288), scope: scope[0] }, kind: _2 = std::rt::panic_fmt(move _3) -> unwind continue }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(PostCleanup), pass_count: 2, source: MirSource { instance: Item(core::slice::index::slice_end_index_overflow_fail), promoted: None }, source_scopes: [SourceScopeData { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:77:1: 79:2 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:77:45: 77:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/panic.rs:104:21: 108:6 (#288), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/panic.rs:107:9: 107:73 (#288), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/panic.rs:107:38: 107:72 (#290), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 1_usize], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:78:12: 78:58 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 1_usize], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:78:12: 78:58 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 1_usize], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:78:12: 78:58 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 1_usize], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:78:12: 78:58 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 0, spread_arg: None, var_debug_info: [], span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/slice/index.rs:77:1: 79:2 (#0), required_consts: Some([]), mentioned_items: None, is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }`.
 --> /rustc/library/core/src/slice/index.rs:77:1

note: the error occurred when translating `core::slice::index::slice_end_index_overflow_fail`, which is (transitively) used at the following location(s):
 --> tests/ui/unsupported/slice_index.rs:6:19
  |
6 |     let _ = &slice[0..=10];
  |                   --------
  |

thread 'rustc' panicked at /home/nadrieril/.cargo/git/checkouts/hax-580ebeee043cdea1/89a84ec/frontend/exporter/src/types/mir.rs:230:78:
called `Option::unwrap()` on a `None` value
error: Hax panicked when translating `Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [StorageLive(_2), _2 = copy _1 as &[&str] (PointerCoercion(Unsize, Implicit)), StorageLive(_3), _3 = const std::fmt::Arguments::<'_>::new_const::<N>::promoted[0] as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize, Implicit)), _0 = std::fmt::Arguments::<'_> { pieces: move _2, fmt: const std::option::Option::<&[core::fmt::rt::Placeholder]>::None, args: move _3 }, StorageDead(_3), StorageDead(_2)], terminator: Some(Terminator { source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:633:6: 633:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(Optimized), pass_count: 1, source: MirSource { instance: Item(core::fmt::{impl#4}::new_const), promoted: None }, source_scopes: [SourceScopeData { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:630:5: 633:6 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:630:78: 630:82 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; N/#1], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:630:44: 630:50 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:632:21: 632:27 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>], user_ty: None, source_info: SourceInfo { span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:632:46: 632:49 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 1, spread_arg: None, var_debug_info: [pieces => _1], span: /rustc/920d95eaf23d7eb6b415d09868e4f793024fa604/library/core/src/fmt/mod.rs:630:5: 633:6 (#0), required_consts: Some([const std::fmt::Arguments::<'_>::new_const::<N>::{constant#1}]), mentioned_items: Some([]), is_polymorphic: true, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }`.
 --> /rustc/library/core/src/fmt/mod.rs:630:5

note: the error occurred when translating `core::fmt::{core::fmt::Arguments<'a>}#4::new_const`, which is (transitively) used at the following location(s):
 --> tests/ui/unsupported/slice_index.rs:6:19
  |
6 |     let _ = &slice[0..=10];
  |                   --------
  |
ERROR Charon failed to translate this code (2 errors)
