# Final LLBC before serialization:

struct test_crate::UInt<U, B> =
{
  U,
  B,
}

struct test_crate::UTerm = {}

struct test_crate::B0 = {}

type test_crate::LongType = test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UTerm, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>

fn test_crate::foo<T>()
{
    let @0: (); // return
    let @1: (); // anonymous local

    @1 := ()
    @0 := move (@1)
    @0 := ()
    return
}

fn test_crate::main()
{
    let @0: (); // return
    let @1: (); // anonymous local
    let @2: (); // anonymous local

    @1 := test_crate::foo<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UInt<test_crate::UTerm, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>, test_crate::B0>>()
    drop @1
    @2 := ()
    @0 := move (@2)
    @0 := ()
    return
}



