on:
  push:
    branches-ignore: [ '_**' ]
  pull_request:
  workflow_dispatch:

# Minimum permissions required by skip-duplicate-actions
permissions:
  actions: write
  contents: read

jobs:
  # Avoid `push` and `pull_request` running the same job twice
  check_if_skip_duplicate_job:
    runs-on: [self-hosted, linux, nix]
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

  nix:
    needs: check_if_skip_duplicate_job
    if: needs.check_if_skip_duplicate_job.outputs.should_skip != 'true'
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux, nix]
    steps:
      #- uses: cachix/install-nix-action@v22
      - uses: actions/checkout@v4
      - run: nix build -L .#charon
      - run: nix build -L .#charon-ml
      - run: nix flake check -L

  eurydice:
    needs: [check_if_skip_duplicate_job, nix]
    if: needs.check_if_skip_duplicate_job.outputs.should_skip != 'true'
    runs-on: [self-hosted, linux, nix]
    steps:
      - run: nix build -L github:aeneasverif/eurydice --override-input charon github:aeneasverif/charon/${{ github.ref }}

  kyber:
    needs: [check_if_skip_duplicate_job, eurydice]
    if: needs.check_if_skip_duplicate_job.outputs.should_skip != 'true'
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout libcrux
        uses: actions/checkout@v4
        with:
          repository: cryspen/libcrux
      # Kyber expects Eurydice's sources in `$EURYDICE_HOME`,
      # not the install directory.
      - name: checkout eurydice
        uses: actions/checkout@v4
        with:
          repository: aeneasverif/eurydice
          path: eurydice
      - name: setup
        run: |
          nix build github:aeneasverif/charon/${{ github.ref }} -o charon
          nix build ./eurydice -o eurydice/result --override-input charon github:aeneasverif/charon/${{ github.ref }}
          ln -s $(pwd)/eurydice/result/bin/eurydice $(pwd)/eurydice/eurydice
          nix build github:hacl-star/hacl-nix#fstar -o fstar
          nix build github:hacl-star/hacl-nix#karamel.home -o karamel
          echo CHARON_HOME=$(pwd)/charon >> $GITHUB_ENV
          echo EURYDICE_HOME=$(pwd)/eurydice >> $GITHUB_ENV
          echo FSTAR_HOME=$(pwd)/fstar >> $GITHUB_ENV
          echo KRML_HOME=$(pwd)/karamel >> $GITHUB_ENV
      - name: build kyber
        run: nix develop github:aeneasverif/charon/${{ github.ref }} --command bash kyber-crate.sh
